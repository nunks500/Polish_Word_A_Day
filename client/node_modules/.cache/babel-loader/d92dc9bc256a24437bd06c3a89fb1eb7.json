{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\joel.dinis\\\\Downloads\\\\polish_learn\\\\Polish_Word_A_Day\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\joel.dinis\\\\Downloads\\\\polish_learn\\\\Polish_Word_A_Day\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\joel.dinis\\\\Downloads\\\\polish_learn\\\\Polish_Word_A_Day\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\joel.dinis\\\\Downloads\\\\polish_learn\\\\Polish_Word_A_Day\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\joel.dinis\\\\Downloads\\\\polish_learn\\\\Polish_Word_A_Day\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\joel.dinis\\\\Downloads\\\\polish_learn\\\\Polish_Word_A_Day\\\\client\\\\src\\\\Body\\\\Body.js\";\nimport React, { Component } from 'react';\nimport styles from './Body.css';\nimport { Howl, Howler } from 'howler';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\n\nvar Body =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Body, _Component);\n\n  function Body() {\n    _classCallCheck(this, Body);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Body).apply(this, arguments));\n  }\n\n  _createClass(Body, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      fetch('/api', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        // Work with JSON data here\n        var siteprops = {\n          siteprops: {\n            wordOfTheDay: JSON.parse(data)['xml']['words'][0]['word'][0],\n            translation: JSON.parse(data)['xml']['words'][0]['translation'][0],\n            phrase: JSON.parse(data)['xml']['words'][0]['enphrase'][0],\n            plphrase: JSON.parse(data)['xml']['words'][0]['fnphrase'][0],\n            wordtype: JSON.parse(data)['xml']['words'][0]['wordtype'][0],\n            wordsound: JSON.parse(data)['xml']['words'][0]['wordsound'][0],\n            phrasesound: JSON.parse(data)['xml']['words'][0]['phrasesound'][0]\n          }\n        };\n\n        _this.setState(siteprops);\n      }).catch(function (err) {\n        // Do something for an error here\n        console.log(\"Error Reading data \" + err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Word\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.props.siteprops.wordOfTheDay), \" \"), React.createElement(FontAwesomeIcon, {\n        className: \"playbutton\",\n        onClick: function onClick() {\n          return _this2.renderWordSound(_this2.props.siteprops.wordsound);\n        },\n        icon: faPlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PhrasePL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.props.siteprops.plphrase), React.createElement(FontAwesomeIcon, {\n        className: \"playbuttonPhrase\",\n        onClick: function onClick() {\n          return _this2.renderWordSound(_this2.props.siteprops.phrasesound);\n        },\n        icon: faPlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PhraseEN\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.props.siteprops.phrase), React.createElement(\"div\", {\n        className: \"Translation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.siteprops.translation, \" - \", this.props.siteprops.wordtype)));\n    }\n  }, {\n    key: \"renderWordSound\",\n    value: function renderWordSound(wordsound) {\n      return new Howl({\n        src: [wordsound],\n        autoplay: true,\n        volume: 0.9,\n        onend: function onend() {\n          console.log('Finished!');\n        }\n      });\n    }\n  }]);\n\n  return Body;\n}(Component);\n\nexport default Body;","map":{"version":3,"sources":["C:\\Users\\joel.dinis\\Downloads\\polish_learn\\Polish_Word_A_Day\\client\\src\\Body\\Body.js"],"names":["React","Component","styles","Howl","Howler","FontAwesomeIcon","faPlay","Body","fetch","headers","then","response","json","data","siteprops","wordOfTheDay","JSON","parse","translation","phrase","plphrase","wordtype","wordsound","phrasesound","setState","catch","err","console","log","props","renderWordSound","src","autoplay","volume","onend"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styles from './Body.css';\r\nimport {Howl, Howler} from 'howler';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Body extends Component {\r\n\r\n    componentDidMount() {\r\n        fetch('/api', {\r\n          headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n           }})\r\n           .then(response => {\r\n            return response.json();\r\n          }).then(data => {\r\n            // Work with JSON data here\r\n            const siteprops = {\r\n              siteprops: {\r\n                wordOfTheDay: JSON.parse(data)['xml']['words'][0]['word'][0],\r\n                translation: JSON.parse(data)['xml']['words'][0]['translation'][0],\r\n                phrase: JSON.parse(data)['xml']['words'][0]['enphrase'][0],\r\n                plphrase: JSON.parse(data)['xml']['words'][0]['fnphrase'][0],\r\n                wordtype: JSON.parse(data)['xml']['words'][0]['wordtype'][0],\r\n                wordsound: JSON.parse(data)['xml']['words'][0]['wordsound'][0],\r\n                phrasesound: JSON.parse(data)['xml']['words'][0]['phrasesound'][0],\r\n              }\r\n            }\r\n  \r\n            this.setState(siteprops);\r\n  \r\n          }).catch(err => {\r\n            // Do something for an error here\r\n            console.log(\"Error Reading data \" + err);\r\n          });\r\n      }\r\n\r\n        render(){\r\n            return (\r\n                <div>\r\n                    <div className=\"Body\">\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"Word\"><strong>{this.props.siteprops.wordOfTheDay}</strong> </div>\r\n                        <FontAwesomeIcon className=\"playbutton\" onClick={() => this.renderWordSound(this.props.siteprops.wordsound)} icon={faPlay}  />\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"PhrasePL\">{this.props.siteprops.plphrase}</div>\r\n                        <FontAwesomeIcon className=\"playbuttonPhrase\" onClick={() => this.renderWordSound(this.props.siteprops.phrasesound)} icon={faPlay}  />\r\n                    </div>\r\n                    <div className=\"PhraseEN\">{this.props.siteprops.phrase}</div>\r\n                    <div className=\"Translation\">{this.props.siteprops.translation} - {this.props.siteprops.wordtype}</div>\r\n\r\n                    </div>\r\n                </div>\r\n               \r\n            );\r\n        }\r\n    \r\n    renderWordSound(wordsound){\r\n        return new Howl({\r\n            src: [wordsound],\r\n            autoplay: true,\r\n            volume: 0.9,\r\n            onend: function() {\r\n              console.log('Finished!');\r\n            }\r\n          });\r\n        }\r\n}\r\n\r\nexport default Body;"]},"metadata":{},"sourceType":"module"}