{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\joel.dinis\\\\Downloads\\\\polish_learn\\\\Polish_Word_A_Day\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\joel.dinis\\\\Downloads\\\\polish_learn\\\\Polish_Word_A_Day\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\joel.dinis\\\\Downloads\\\\polish_learn\\\\Polish_Word_A_Day\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\joel.dinis\\\\Downloads\\\\polish_learn\\\\Polish_Word_A_Day\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\joel.dinis\\\\Downloads\\\\polish_learn\\\\Polish_Word_A_Day\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\joel.dinis\\\\Downloads\\\\polish_learn\\\\Polish_Word_A_Day\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport Body from './Body/Body';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      fetch('/api', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        // Work with JSON data here\n        var siteprops = {\n          siteprops: {\n            wordOfTheDay: JSON.parse(data)['xml']['words'][0]['word'][0],\n            translation: JSON.parse(data)['xml']['words'][0]['translation'][0],\n            phrase: JSON.parse(data)['xml']['words'][0]['enphrase'][0],\n            plphrase: JSON.parse(data)['xml']['words'][0]['fnphrase'][0],\n            wordtype: JSON.parse(data)['xml']['words'][0]['wordtype'][0],\n            wordsound: JSON.parse(data)['xml']['words'][0]['wordsound'][0],\n            phrasesound: JSON.parse(data)['xml']['words'][0]['phrasesound'][0]\n          }\n        };\n\n        _this.setState(siteprops);\n      }).catch(function (err) {\n        // Do something for an error here\n        console.log(\"Error Reading data \" + err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state === null) {\n        // Render loading state ...\n        return React.createElement(\"div\", {\n          className: \"AppLoading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \" . . .\"));\n      } else {\n        return React.createElement(Router, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(Route, {\n          path: \"/pl/\",\n          exact: true,\n          component: this.PL,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"PL\",\n    value: function PL() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Body, {\n        siteprops: this.state.siteprops,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\joel.dinis\\Downloads\\polish_learn\\Polish_Word_A_Day\\client\\src\\App.js"],"names":["React","Component","Header","Footer","Body","BrowserRouter","Router","Route","Link","App","fetch","headers","then","response","json","data","siteprops","wordOfTheDay","JSON","parse","translation","phrase","plphrase","wordtype","wordsound","phrasesound","setState","catch","err","console","log","state","PL"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport Body from './Body/Body';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\n\nclass App extends Component {\n\n    componentDidMount() {\n      fetch('/api', {\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         }})\n         .then(response => {\n          return response.json();\n        }).then(data => {\n          // Work with JSON data here\n          const siteprops = {\n            siteprops: {\n              wordOfTheDay: JSON.parse(data)['xml']['words'][0]['word'][0],\n              translation: JSON.parse(data)['xml']['words'][0]['translation'][0],\n              phrase: JSON.parse(data)['xml']['words'][0]['enphrase'][0],\n              plphrase: JSON.parse(data)['xml']['words'][0]['fnphrase'][0],\n              wordtype: JSON.parse(data)['xml']['words'][0]['wordtype'][0],\n              wordsound: JSON.parse(data)['xml']['words'][0]['wordsound'][0],\n              phrasesound: JSON.parse(data)['xml']['words'][0]['phrasesound'][0],\n            }\n          }\n\n          this.setState(siteprops);\n\n        }).catch(err => {\n          // Do something for an error here\n          console.log(\"Error Reading data \" + err);\n        });\n    }\n  \n    render() {\n      if (this.state === null) {\n        // Render loading state ...\n        return (\n          <div className=\"AppLoading\">\n            <h1> . . .</h1>\n          </div>\n        );  \n      } else {\n\n        return (\n          <Router>\n            <Route path=\"/pl/\" exact component={this.PL} />\n          </Router>\n        );   \n      }\n   }\n\n   PL(){\n    return (<div className=\"App\">\n    <Header />\n    <Body siteprops = {this.state.siteprops} />\n    <Footer />\n  </div>);\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}